{"version":3,"sources":["firebase.js","App.js","serviceWorker.js","components/Edit.js","components/Create.js","components/Show.js","index.js"],"names":["firebase","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","App","props","handleChange","event","setState","searchQuery","target","value","handleSearch","ref","get","then","querySnapshot","boards","forEach","doc","data","name","toLowerCase","includes","state","flat","vehicle","contact","push","catch","error","console","log","onCollectionUpdate","key","id","firestore","collection","unsubscribe","prevProps","prevState","this","onSnapshot","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","delete","class","to","type","onChange","placeholder","map","board","onClick","bind","Component","Boolean","window","location","hostname","match","Edit","e","onSubmit","preventDefault","set","docRef","history","params","exists","for","Create","add","Show","isLoading","ReactDOM","render","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b79da474.chunk.js","sourcesContent":["import * as firebase from \"firebase\";\r\nimport \"firebase/firestore\";\r\n\r\nconst settings = {timestampsInSnapshots: true};\r\n\r\nlet config = {\r\n  apiKey: \"AIzaSyB8HIiVThoMEb__-CLxN--4OnTH57CLPYQ\",\r\n  authDomain: \"car-parking-4ebe1.firebaseapp.com\",\r\n  projectId: \"car-parking-4ebe1\",\r\n  storageBucket: \"car-parking-4ebe1.appspot.com\",\r\n  messagingSenderId: \"192132727465\",\r\n  appId: \"1:192132727465:web:86aeee41ba2cfd6d701fb8\",\r\n  measurementId: \"G-PK9YMW3VML\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\nfirebase.firestore().settings(settings);\r\nexport default firebase;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './App.css';\r\nimport firebase from './firebase';\r\nimport Swal from 'sweetalert2';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.ref = firebase.firestore().collection('boards');\r\n    this.unsubscribe = null;\r\n    this.state = {      \r\n      searchQuery: '',\r\n      boards: [],\r\n    };    \r\n  }   \r\n\r\n  handleChange = (event) => {\r\n    this.setState({ searchQuery: event.target.value });\r\n  };\r\n\r\n  handleSearch = () => {   \r\n   this.ref.get().then((querySnapshot) => {\r\n        const boards = [];\r\n        querySnapshot.forEach((doc) => {\r\n          const data = doc.data();\r\n          if (data.name.toLowerCase().includes(this.state.searchQuery.toLowerCase()) \r\n          || data.flat.toLowerCase().includes(this.state.searchQuery.toLowerCase())\r\n          || data.vehicle.toLowerCase().includes(this.state.searchQuery.toLowerCase())\r\n          || data.contact.includes(this.state.searchQuery)) {\r\n            boards.push(data);\r\n          }\r\n        });\r\n        this.setState({ boards });\r\n      })\r\n      .catch((error) => {\r\n        console.log('Error getting documents: ', error);\r\n      });    \r\n  }\r\n \r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.searchQuery !== this.state.searchQuery) {      \r\n    this.handleSearch();   \r\n    }\r\n  }  \r\n\r\n  onCollectionUpdate = (querySnapshot) => {\r\n    const boards = [];\r\n    querySnapshot.forEach((doc) => {\r\n      const { name, flat, vehicle, contact } = doc.data();\r\n      boards.push({\r\n        key: doc.id,\r\n        doc, // DocumentSnapshot\r\n        name,\r\n        flat,\r\n        vehicle,\r\n        contact,\r\n      });\r\n    });\r\n    this.setState({\r\n      boards : boards\r\n   });\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.unsubscribe = this.ref.onSnapshot(this.onCollectionUpdate); \r\n  }\r\n\r\n  delete(id){     \r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"You won't be able to revert this!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.ref.doc(id).delete().then(() => {\r\n          Swal.fire({  \r\n            title: 'Deleted',  \r\n            text: 'Data was deleted sucessfully',\r\n            icon: 'success'\r\n          }); \r\n        }).catch((error) => {      \r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"container\">\r\n        <div class=\"panel panel-default\">\r\n          <div class=\"panel-heading\">\r\n            <h3 class=\"panel-title\">\r\n             Celebration Homes Parking\r\n            </h3>\r\n          </div>\r\n          <div class=\"panel-body\">\r\n            <br/>\r\n            <div>\r\n            <Link to=\"/create\" class=\"btn btn-primary\">Add</Link> &nbsp;   \r\n            <input type=\"text\" value={this.searchQuery} onChange={this.handleChange} placeholder=\"Search\"/><br/><br/>          \r\n            </div>\r\n            <table class=\"table table-stripe\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Name</th>\r\n                  <th>Flat no.</th>\r\n                  <th>Vehicle no.</th>\r\n                  <th>Contact no.</th>\r\n                  <th>Action</th>\r\n                 </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.state.boards.map(board =>\r\n                  <tr>\r\n                    <td><Link to={`/show/${board.key}`}>{board.name}</Link></td>\r\n                    <td>{board.flat}</td>\r\n                    <td>{board.vehicle}</td>\r\n                    <td>{board.contact}</td>\r\n                    <td><Link to={`/edit/${board.key}`} class=\"btn btn-success\">Edit</Link>&nbsp;\r\n                    <button onClick={this.delete.bind(this, board.key)} class=\"btn btn-danger\">Delete</button>\r\n                    </td>\r\n                   </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport firebase from '../firebase';\r\nimport { Link } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\n\r\nclass Edit extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      key: '',      \r\n      name: '',\r\n      flat: '',\r\n      vehicle: '',\r\n      contact: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const ref = firebase.firestore().collection('boards').doc(this.props.match.params.id);\r\n    ref.get().then((doc) => {\r\n      if (doc.exists) {\r\n        const board = doc.data();\r\n        this.setState({\r\n          key: doc.id,\r\n          name: board.name,\r\n          flat: board.flat,\r\n          vehicle: board.vehicle,\r\n          contact: board.contact,\r\n        });\r\n      } else {\r\n        console.log(\"No such document!\");\r\n      }\r\n    });\r\n  }\r\n\r\n  onChange = (e) => {\r\n    const state = this.state\r\n    state[e.target.name] = e.target.value;\r\n    this.setState({board:state});\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, flat, vehicle, contact } = this.state;\r\n\r\n    const updateRef = firebase.firestore().collection('boards').doc(this.state.key);\r\n    updateRef.set({\r\n      name,\r\n      flat,\r\n      vehicle,\r\n      contact,\r\n    }).then((docRef) => {\r\n      this.setState({\r\n        key: '',\r\n        name: '',\r\n        flat: '',\r\n        vehicle: '',\r\n        contact: '',\r\n      });\r\n      this.props.history.push(\"/\");\r\n      Swal.fire({\r\n        icon: 'sucess',\r\n        title: 'Updated',\r\n        text: 'Data was Updated sucessfully!'\r\n      })\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error adding document: \", error);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"container\">\r\n        <div class=\"panel panel-default\">\r\n          <div class=\"panel-heading\">\r\n            <h3 class=\"panel-title\">\r\n              EDIT\r\n            </h3>\r\n          </div>\r\n          <div class=\"panel-body\">\r\n            {/* <h4><Link to={`/show/${this.state.key}`} class=\"btn btn-primary\">List</Link></h4> */}\r\n            <form onSubmit={this.onSubmit}>\r\n              <div class=\"form-group\">\r\n                <label for=\"name\">Name:</label>\r\n                <input type=\"text\" class=\"form-control\" name=\"name\" value={this.state.name} onChange={this.onChange} placeholder=\"Name\" />\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"flat\">Flat:</label>\r\n                <input type=\"text\" class=\"form-control\" name=\"flat\" value={this.state.flat} onChange={this.onChange} placeholder=\"Flat\" />\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"vehicle\">Vehicle Number:</label>\r\n                <input type=\"text\" class=\"form-control\" name=\"vehicle\" value={this.state.vehicle} onChange={this.onChange} placeholder=\"vehicle\" />\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"contact\">Contact Number:</label>\r\n                <input type=\"number\" class=\"form-control\" name=\"contact\" value={this.state.contact} onChange={this.onChange} placeholder=\"Contact\" />\r\n              </div>            \r\n              <div>\r\n              <button type=\"submit\" class=\"btn btn-success\">Submit</button>&nbsp;\r\n              <button type=\"button\" class=\"btn btn-secondry\"><Link to=\"/\">Back</Link></button>\r\n              </div>              \r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Edit;\r\n","import React, { Component } from 'react';\r\nimport firebase from '../firebase';\r\nimport { Link } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\n\r\nclass Create extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.ref = firebase.firestore().collection('boards');\r\n    this.state = {\r\n      name: '',\r\n      flat: '',\r\n      vehicle: '',\r\n      contact: '',\r\n    };\r\n  }\r\n  onChange = (e) => {\r\n    const state = this.state\r\n    state[e.target.name] = e.target.value;\r\n    this.setState(state);\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, flat, vehicle, contact } = this.state;\r\n\r\n    if(name && vehicle){\r\n    this.ref.add({\r\n      name,\r\n      flat,\r\n      vehicle,\r\n      contact\r\n    }).then((docRef) => {\r\n      this.setState({\r\n        name: '',\r\n        flat: '',\r\n        vehicle: '',\r\n        contact: '',\r\n      });\r\n      this.props.history.push(\"/\");\r\n      Swal.fire({\r\n        icon: 'sucess',\r\n        title: 'Added',\r\n        text: 'Data was added sucessfully!'\r\n      })\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error adding document: \", error);\r\n    });\r\n  }else{\r\n    Swal.fire({\r\n      icon: 'warning',\r\n      title: 'Add',\r\n      text: 'Name and vehicle number are required!!'\r\n    })\r\n  }\r\n  }\r\n\r\n  render() {\r\n    const { name, flat, vehicle, contact } = this.state;\r\n    return (\r\n      <div class=\"container\">\r\n        <div class=\"panel panel-default\">\r\n          <div class=\"panel-heading\">\r\n            <h3 class=\"panel-title\">\r\n              ADD \r\n            </h3>\r\n          </div>\r\n          <div class=\"panel-body\">           \r\n            <form onSubmit={this.onSubmit}>\r\n              <div class=\"form-group\">\r\n                <label for=\"name\">Name:</label>\r\n                <input type=\"text\" class=\"form-control\" name=\"name\" value={name} onChange={this.onChange} placeholder=\"Name\" />\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"flat\">Flat Number:</label>               \r\n                <input type=\"text\" class=\"form-control\" name=\"flat\" value={flat} onChange={this.onChange} placeholder=\"Flat\"/>\r\n              </div>              \r\n              <div class=\"form-group\">\r\n                <label for=\"vehicle\">Vehicle Number:</label>\r\n                <input type=\"text\" class=\"form-control\" name=\"vehicle\" value={vehicle} onChange={this.onChange} placeholder=\"vehicle\" />\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"contact\">Contact Number:</label>\r\n                <input type=\"number\" class=\"form-control\" name=\"contact\" value={contact} onChange={this.onChange} placeholder=\"Contact\" />\r\n              </div>\r\n              <div>\r\n              <button type=\"submit\" class=\"btn btn-success\">Submit</button>&nbsp;\r\n              <button type=\"button\" class=\"btn btn-secondry\"><Link to=\"/\">Back</Link></button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Create;\r\n","import React, { Component } from 'react';\r\nimport firebase from '../firebase';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Show extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      board: {},\r\n      key: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const ref = firebase.firestore().collection('boards').doc(this.props.match.params.id);\r\n    ref.get().then((doc) => {\r\n      if (doc.exists) {\r\n        this.setState({\r\n          board: doc.data(),\r\n          key: doc.id,\r\n          isLoading: false\r\n        });\r\n      } else {\r\n        console.log(\"No such document!\");\r\n      }\r\n    });\r\n  }  \r\n\r\n  render() {\r\n    return (\r\n      <div class=\"container\">\r\n        <div class=\"panel panel-default\">\r\n          <div class=\"panel-heading\">         \r\n            <h3 class=\"panel-title\">\r\n              {this.state.board.name}\r\n            </h3>\r\n          </div>\r\n          <div class=\"panel-body\">\r\n            <dl>\r\n              <dt>Flat:</dt>\r\n              <dd>{this.state.board.flat}</dd>\r\n              <dt>vehicle:</dt>\r\n              <dd>{this.state.board.vehicle}</dd>\r\n              <dt>Contact:</dt>\r\n              <dd>{this.state.board.contact}</dd>\r\n            </dl>\r\n            </div>\r\n            <h4><Link to=\"/\">Go to Home</Link></h4>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Show;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Edit from './components/Edit';\r\nimport Create from './components/Create';\r\nimport Show from './components/Show';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n      <div>\r\n        <Route exact path='/' component={App} />\r\n        <Route path='/edit/:id' component={Edit} />\r\n        <Route path='/create' component={Create} />\r\n        <Route path='/show/:id' component={Show} />\r\n      </div>\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}